// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

// the templ is used to store the component required for the chart
// it is used in the main.go file to render the chart
// it is used to render the chart in the browser using the Chart.js library
func Chart() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html><head><title>Real-Time Stock Chart</title><script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script><script src=\"https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns@3.0.0/dist/chartjs-adapter-date-fns.bundle.min.js\"></script><style>\r\n         .chart-container {\r\n         width: 1000px;\r\n         margin: 2rem auto;\r\n         padding: 20px;\r\n         box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n         }\r\n         h1 {\r\n         text-align: center;\r\n         color: #2c3e50;\r\n         font-family: Arial, sans-serif;\r\n         }\r\n      </style></head><body><div class=\"chart-container\"><h1>Real-Time Stock: GOOG (Mock Data)</h1><canvas id=\"chart\"></canvas></div><script>\r\n         const ctx = document.getElementById('chart').getContext('2d');\r\n         const chart = new Chart(ctx, {\r\n           type: 'line',\r\n           data: {\r\n             datasets: [{\r\n               label: 'Google (GOOG) Price',\r\n               borderColor: '#3498db',\r\n               backgroundColor: 'rgba(52, 152, 219, 0.1)',\r\n               borderWidth: 2,\r\n               pointRadius: 2,\r\n               tension: 0.1\r\n             }]\r\n           },\r\n           options: {\r\n             plugins: {\r\n               title: {\r\n                 display: true,\r\n                 text: 'Live Price Updates',\r\n                 font: { size: 16 }\r\n               },\r\n               legend: {\r\n                 position: 'top',\r\n                 labels: { font: { size: 14 } }\r\n               }\r\n             },\r\n             scales: {\r\n               x: {\r\n                 type: 'time',\r\n                 time: { unit: 'second', tooltipFormat: 'HH:mm:ss' },\r\n                 title: { display: true, text: 'Time', font: { size: 14 } }\r\n               },\r\n               y: {\r\n                 title: {\r\n                   display: true,\r\n                   text: 'Price (USD)',\r\n                   font: { size: 14 }\r\n                 },\r\n                 grid: { color: 'rgba(0,0,0,0.05)' }\r\n               }\r\n             }\r\n           }\r\n         });\r\n         \r\n         const ws = new WebSocket('ws://' + window.location.host + '/ws');\r\n         ws.onmessage = (event) => {\r\n           const data = JSON.parse(event.data);\r\n           chart.data.datasets[0].data.push({\r\n             x: data.time,\r\n             y: data.price\r\n           });\r\n           // Keep last 100 data points\r\n           if (chart.data.datasets[0].data.length > 100) {\r\n             chart.data.datasets[0].data.shift();\r\n           }\r\n           chart.update();\r\n         };\r\n      </script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
